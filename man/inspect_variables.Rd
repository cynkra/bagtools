% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inspect_variables.R
\name{inspect_variables}
\alias{inspect_variables}
\title{Inspect variables}
\usage{
inspect_variables(
  path = rstudioapi::documentPath(rstudioapi::getSourceEditorContext()$id),
  scope = ".",
  recursive = TRUE,
  vars = NULL,
  exclude = NULL,
  only_first = FALSE,
  focus = c("inputs", "outputs")
)
}
\arguments{
\item{path}{The path to fetch vinspected variable names from}

\item{scope}{A vector of files or directory to inspect}

\item{recursive}{Whether the directories given to \code{scope} should be inspected
recursively}

\item{exclude}{variables to exclude, so common variable names such as \code{x} don't
clutter the results.}
}
\value{
Returns the source markers silently, called mainly for side effects
}
\description{
Inspect use in other scripts of variables found in a given script. By default
the given script is the active script and other scripts are all other scripts
found recursively in the working directory. The "i" icon is used when a variable
was defined first in a script then potentially used or modified, the "!" icon
is used when a variable is used or modified without being defined first, a sign
that it has been defined in another script.
}
\details{
Note that the use of non standard evaluation creates false positives, if they
annoy you too much you can set them to \code{NULL} on top of the script. or call
\code{globalVariables("your_var")}. Both are steps toward getting a package that
passes CRAN checks without notes.

Use of functions like \code{get()} or \code{assign()} will also make the results less reliable.
}
